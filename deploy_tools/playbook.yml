---

- hosts: all
  vars:
    host: "nikanoff.ru"
    ansible_user: "nika"
    
  tasks:
 
    - name: Deadsnakes PPA to get Python 3 
      apt_repository:
        repo='ppa:deadsnakes/ppa'
    - name: make sure required packages are installed
      apt: pkg=nginx,git,python3,python3-venv state=present



    - name: Download code from Github
      ansible.builtin.git:
        repo: https://github.com/nikanoff/nikanoffv1.ru.git
        dest: /home/{{ ansible_user }}/sites/{{ host }}
        force: yes
        


    - name: Install dependencies
      pip:
        requirements: /home/{{ ansible_user }}/sites/{{ host }}/requirements.txt
        virtualenv: /home/{{ ansible_user }}/sites/{{ host }}/venv
        virtualenv_command: 'python3 -m venv'        

    - name: Run migrations
      community.general.django_manage:
        command: migrate
        project_path: "/home/{{ ansible_user }}/sites/{{ host }}"
        virtualenv: "/home/{{ ansible_user }}/sites/{{ host }}/venv"
            
    - name: Add nginx config to sites-available
      template:
        src=./sites-available.j2
        dest=/etc/nginx/sites-available/{{ host }}
      notify:
        - restart nginx

    - name: Add symlink in nginx sites-enabled
      file:
          src=/etc/nginx/sites-available/{{ host }}
          dest=/etc/nginx/sites-enabled/{{ host }}
          state=link
      notify:
        - restart nginx

    - name: write gunicorn service script
      template:
          src=./gunicorn.j2
          dest=/etc/systemd/system/gunicorn-{{ host }}.service
      notify:
        - restart gunicorn

    - name: Collect static Files
      community.general.django_manage:
        command: collectstatic
        project_path: "/home/{{ ansible_user }}/sites/{{ host }}"
        virtualenv: "/home/{{ ansible_user }}/sites/{{ host }}/venv"
      

    - name: Create .env file
      template:
          src=./dotenv.j2
          dest=/home/{{ ansible_user }}/sites/{{ host }}/.env


    - name: Write DJANGO_SECRET_KEY to .env
      ansible.builtin.lineinfile:
        path: /home/{{ ansible_user }}/sites/{{ host }}/.env
        line: DJANGO_SECRET_KEY="{{ lookup('password', '/dev/null') }}"

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted

    - name: restart gunicorn
      systemd:
        name=gunicorn-{{ host }}
        daemon_reload=yes
        enabled=yes
        state=restarted


